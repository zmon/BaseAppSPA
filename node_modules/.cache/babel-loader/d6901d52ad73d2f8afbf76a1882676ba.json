{"remainingRequest":"/Users/matt/code/Projects/codeforkc/BaseAppSPA/node_modules/babel-loader/lib/index.js!/Users/matt/code/Projects/codeforkc/BaseAppSPA/node_modules/eslint-loader/index.js??ref--13-0!/Users/matt/code/Projects/codeforkc/BaseAppSPA/src/services/TokenService.js","dependencies":[{"path":"/Users/matt/code/Projects/codeforkc/BaseAppSPA/src/services/TokenService.js","mtime":1629775922924},{"path":"/Users/matt/code/Projects/codeforkc/BaseAppSPA/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/matt/code/Projects/codeforkc/BaseAppSPA/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/matt/code/Projects/codeforkc/BaseAppSPA/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:dmFyIFRPS0VOX0tFWSA9ICdhY2Nlc3NfdG9rZW4nOwovKioKICogTWFuYWdlIHRoZSBob3cgQWNjZXNzIFRva2VucyBhcmUgYmVpbmcgc3RvcmVkIGFuZCByZXRyZWl2ZWQgZnJvbSBzdG9yYWdlLgogKgogKiBDdXJyZW50IGltcGxlbWVudGF0aW9uIHN0b3JlcyB0byBsb2NhbFN0b3JhZ2UuIExvY2FsIFN0b3JhZ2Ugc2hvdWxkIGFsd2F5cyBiZQogKiBhY2Nlc3NlZCB0aHJvdWdoIHRoaXMgaW5zdGFjZS4KICoqLwoKdmFyIFRva2VuU2VydmljZSA9IHsKICBnZXRUb2tlbjogZnVuY3Rpb24gZ2V0VG9rZW4oKSB7CiAgICByZXR1cm4gbG9jYWxTdG9yYWdlLmdldEl0ZW0oVE9LRU5fS0VZKTsKICB9LAogIHNhdmVUb2tlbjogZnVuY3Rpb24gc2F2ZVRva2VuKGFjY2Vzc1Rva2VuKSB7CiAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShUT0tFTl9LRVksIGFjY2Vzc1Rva2VuKTsKICB9LAogIHJlbW92ZVRva2VuOiBmdW5jdGlvbiByZW1vdmVUb2tlbigpIHsKICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKFRPS0VOX0tFWSk7CiAgfQp9OwpleHBvcnQgeyBUb2tlblNlcnZpY2UgfTs="},{"version":3,"sources":["/Users/matt/code/Projects/codeforkc/BaseAppSPA/src/services/TokenService.js"],"names":["TOKEN_KEY","TokenService","getToken","localStorage","getItem","saveToken","accessToken","setItem","removeToken","removeItem"],"mappings":"AAAA,IAAMA,SAAS,GAAG,cAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAMC,YAAY,GAAG;AACjBC,EAAAA,QADiB,sBACN;AACP,WAAOC,YAAY,CAACC,OAAb,CAAqBJ,SAArB,CAAP;AACH,GAHgB;AAKjBK,EAAAA,SALiB,qBAKPC,WALO,EAKM;AACnBH,IAAAA,YAAY,CAACI,OAAb,CAAqBP,SAArB,EAAgCM,WAAhC;AACH,GAPgB;AASjBE,EAAAA,WATiB,yBASH;AACVL,IAAAA,YAAY,CAACM,UAAb,CAAwBT,SAAxB;AACH;AAXgB,CAArB;AAeA,SAASC,YAAT","sourcesContent":["const TOKEN_KEY = 'access_token'\n\n/**\n * Manage the how Access Tokens are being stored and retreived from storage.\n *\n * Current implementation stores to localStorage. Local Storage should always be\n * accessed through this instace.\n **/\nconst TokenService = {\n    getToken() {\n        return localStorage.getItem(TOKEN_KEY)\n    },\n\n    saveToken(accessToken) {\n        localStorage.setItem(TOKEN_KEY, accessToken)\n    },\n\n    removeToken() {\n        localStorage.removeItem(TOKEN_KEY)\n    },\n\n}\n\nexport { TokenService }\n"]}]}